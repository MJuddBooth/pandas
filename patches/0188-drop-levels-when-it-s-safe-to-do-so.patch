From 7528bc8386c330d43b36589cfd2f0f5fbf039b9a Mon Sep 17 00:00:00 2001
From: Michael Booth <m.judd.booth@gmail.com>
Date: Sun, 3 Aug 2014 18:12:40 -0400
Subject: [PATCH 0188/1009] drop levels when it's safe to do so

---
 pandas/core/reshape.py | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/pandas/core/reshape.py b/pandas/core/reshape.py
index 522fd5c..061e790 100644
--- a/pandas/core/reshape.py
+++ b/pandas/core/reshape.py
@@ -865,6 +865,9 @@ def tunamelt(frame, id_vars=None, value_vars=None,
     2      c          B          E      5
 
     """
+    def _ok_drop_level(mi, level=0):
+        return len(set(mi.get_level_values(level))) == 1
+                   
     # TODO: what about the existing index?
     if id_vars is not None:
         if not isinstance(id_vars, (tuple, list, np.ndarray)):
@@ -908,13 +911,19 @@ def tunamelt(frame, id_vars=None, value_vars=None,
     for col in id_vars:
         frame.pop(col)
     N, K = frame.shape  
-        
-    idframe = DataFrame(np.tile(idframe.values, (K, 1)), columns=idframe.columns)
+
+    # until we figure out the case when we have residual data multiindexes, squeezing id columns should be harmless default    
+    idcols = idframe.columns
+    for l in reversed(range(idcols.nlevels)):
+        if _ok_drop_level(idcols, l):
+           idcols = idcols.droplevel(l) 
+         
+    idframe = DataFrame(np.tile(idframe.values, (K, 1)), columns=idcols)
 
     if infer_value_name and isinstance(frame.columns, MultiIndex):
         names = set(frame.columns.get_level_values(0))
         if len(names) == 1:
-            value_name = names[0]
+            value_name = names.pop()
             frame.columns = frame.columns.droplevel(0)
 
     # Nameing of columns, etc
@@ -933,7 +942,7 @@ def tunamelt(frame, id_vars=None, value_vars=None,
         var_name = [var_name]
  
             
-    # Of it doesn't make sense to have the top level name become the value_name, 
+    # If it doesn't make sense to have the top level name become the value_name, 
     # we may still want to get rid of it - or not.  An example would be a structure
     # like AAPL -> ( high, low, open, close, volume ).  We don't want AAPL to be 
     # the value_name, and if that is the only one we may wish to drop it entirely.
-- 
2.6.0

